{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","setTimeout","this","movie","medium_cover_image","id","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAkCeA,MA7Bf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACG,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,aAD8B,CAC9B,MAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCmCMC,G,kNA9CZC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKCC,IAAMC,IACd,4DANO,gBAGGJ,EAHH,EAEPK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAR1B,2C,uDAWZ,WAAqB,IAAD,OAClBQ,YAAW,WACT,EAAKD,SAAS,CAAEP,WAAW,MAC1B,KACHS,KAAKP,c,oBAEP,WAAU,IAAD,EACsBO,KAAKV,MAA3BC,EADA,EACAA,UAAWC,EADX,EACWA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAgB,GAAK,OACf,cAAC,EAAD,CAEEvB,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QAJToB,EAAME,e,GAlCRC,IAAMC,YCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d1700f8c.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// movie component는 state를 필요로 하지 않으므로 class 컴포넌트 아닌 function 컴포넌트 쓸거\n\nfunction Movie({ year, title, summary, poster, genres}) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n         <h3 className=\"movie__title\">{title}</h3>\n         <h5 className=\"movie__year\">{year}</h5>\n         <ul className=\"movie__genres\">\n           {genres.map((genre, index) => ( //map function은 item과 item number을 줌\n             <li key={index} className=\"genres__genre\">\n               {genre}\n             </li>\n           ))}\n         </ul>\n         <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie //export 잊지말깅","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n\n// 일반적으로 사람들이 JS 에서 data fetch하는 방법 = fetch() 사용, axios 권장\n class App extends React.Component {\n   state = {\n     isLoading: true,\n     movies: []\n   };\n   getMovies = async () => { // await로 비동기 이거쓰려고 async사용\n      const {\n        data: {\n          data: { movies }\n        }\n      } = await axios.get(\n        \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\" //정렬한거\n      );\n      this.setState({ movies, isLoading: false }); // 원래는 (state에서 온거, 생략가능) movies: movies (axios에서 온거)\n    };\n   //axios에서 온 data를 잡을 필요가 있음, axios는 느리기때문에 기다려줘야함 따라서 componentDidMount에게 기다려달라고 해\n   componentDidMount() {\n     setTimeout(() => {\n       this.setState({ isLoading: false });\n     }, 6000);\n     this.getMovies();\n   }\n   render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n       )}\n     </section>\n   );\n }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// react application은 하나의 component만을 렌더링해야함\n// 따라서 <APP/> 옆에 potato를 쓰는게 아니라 App안에 포테이토 넣을것임"],"sourceRoot":""}